use std::convert::TryInto;
use sdl2::keyboard::Keycode;
use sdl2::mouse::MouseButton;

#[derive(Clone, Copy, Hash, Eq, PartialEq)]
pub enum InputCode {
    Backspace,
    Tab,
    Return,
    Escape,
    Space,
    Exclaim,
    Quotedbl,
    Hash,
    Dollar,
    Percent,
    Ampersand,
    Quote,
    LeftParen,
    RightParen,
    Asterisk,
    Plus,
    Comma,
    Minus,
    Period,
    Slash,
    Num0,
    Num1,
    Num2,
    Num3,
    Num4,
    Num5,
    Num6,
    Num7,
    Num8,
    Num9,
    Colon,
    Semicolon,
    Less,
    Equals,
    Greater,
    Question,
    At,
    LeftBracket,
    Backslash,
    RightBracket,
    Caret,
    Underscore,
    Backquote,
    A,
    B,
    C,
    D,
    E,
    F,
    G,
    H,
    I,
    J,
    K,
    L,
    M,
    N,
    O,
    P,
    Q,
    R,
    S,
    T,
    U,
    V,
    W,
    X,
    Y,
    Z,
    Delete,
    CapsLock,
    F1,
    F2,
    F3,
    F4,
    F5,
    F6,
    F7,
    F8,
    F9,
    F10,
    F11,
    F12,
    PrintScreen,
    ScrollLock,
    Pause,
    Insert,
    Home,
    PageUp,
    End,
    PageDown,
    Right,
    Left,
    Down,
    Up,
    NumLockClear,
    KpDivide,
    KpMultiply,
    KpMinus,
    KpPlus,
    KpEnter,
    Kp1,
    Kp2,
    Kp3,
    Kp4,
    Kp5,
    Kp6,
    Kp7,
    Kp8,
    Kp9,
    Kp0,
    KpPeriod,
    Application,
    Power,
    KpEquals,
    F13,
    F14,
    F15,
    F16,
    F17,
    F18,
    F19,
    F20,
    F21,
    F22,
    F23,
    F24,
    Execute,
    Help,
    Menu,
    Select,
    Stop,
    Again,
    Undo,
    Cut,
    Copy,
    Paste,
    Find,
    Mute,
    VolumeUp,
    VolumeDown,
    KpComma,
    KpEqualsAS400,
    AltErase,
    Sysreq,
    Cancel,
    Clear,
    Prior,
    Return2,
    Separator,
    Out,
    Oper,
    ClearAgain,
    CrSel,
    ExSel,
    Kp00,
    Kp000,
    ThousandsSeparator,
    DecimalSeparator,
    CurrencyUnit,
    CurrencySubUnit,
    KpLeftParen,
    KpRightParen,
    KpLeftBrace,
    KpRightBrace,
    KpTab,
    KpBackspace,
    KpA,
    KpB,
    KpC,
    KpD,
    KpE,
    KpF,
    KpXor,
    KpPower,
    KpPercent,
    KpLess,
    KpGreater,
    KpAmpersand,
    KpDblAmpersand,
    KpVerticalBar,
    KpDblVerticalBar,
    KpColon,
    KpHash,
    KpSpace,
    KpAt,
    KpExclam,
    KpMemStore,
    KpMemRecall,
    KpMemClear,
    KpMemAdd,
    KpMemSubtract,
    KpMemMultiply,
    KpMemDivide,
    KpPlusMinus,
    KpClear,
    KpClearEntry,
    KpBinary,
    KpOctal,
    KpDecimal,
    KpHexadecimal,
    LCtrl,
    LShift,
    LAlt,
    LGui,
    RCtrl,
    RShift,
    RAlt,
    RGui,
    Mode,
    AudioNext,
    AudioPrev,
    AudioStop,
    AudioPlay,
    AudioMute,
    MediaSelect,
    Www,
    Mail,
    Calculator,
    Computer,
    AcSearch,
    AcHome,
    AcBack,
    AcForward,
    AcStop,
    AcRefresh,
    AcBookmarks,
    BrightnessDown,
    BrightnessUp,
    DisplaySwitch,
    KbdIllumToggle,
    KbdIllumDown,
    KbdIllumUp,
    Eject,
    Sleep,
    MouseUnknown,
    MouseLeft,
    MouseMiddle,
    MouseRight,
    MouseX1,
    MouseX2,
    MouseWheelUp,
    MouseWheelDown,
    JoystickButton { index: i32, button: u8 },
    JoystickHatUp { index: i32 },
    JoystickHatDown { index: i32 },
    JoystickHatLeft { index: i32 },
    JoystickHatRight { index: i32 },
    JoystickAxis { index: i32 },
}

impl TryInto<Keycode> for InputCode {

    type Error = String;

    fn try_into(self) -> Result<Keycode, String> {
        match self {
            InputCode::Backspace => { Ok(Keycode::Backspace) },
            InputCode::Tab => { Ok(Keycode::Tab) },
            InputCode::Return => { Ok(Keycode::Return) },
            InputCode::Escape => { Ok(Keycode::Escape) },
            InputCode::Space => { Ok(Keycode::Space) },
            InputCode::Exclaim => { Ok(Keycode::Exclaim) },
            InputCode::Quotedbl => { Ok(Keycode::Quotedbl) },
            InputCode::Hash => { Ok(Keycode::Hash) },
            InputCode::Dollar => { Ok(Keycode::Dollar) },
            InputCode::Percent => { Ok(Keycode::Percent) },
            InputCode::Ampersand => { Ok(Keycode::Ampersand) },
            InputCode::Quote => { Ok(Keycode::Quote) },
            InputCode::LeftParen => { Ok(Keycode::LeftParen) },
            InputCode::RightParen => { Ok(Keycode::RightParen) },
            InputCode::Asterisk => { Ok(Keycode::Asterisk) },
            InputCode::Plus => { Ok(Keycode::Plus) },
            InputCode::Comma => { Ok(Keycode::Comma) },
            InputCode::Minus => { Ok(Keycode::Minus) },
            InputCode::Period => { Ok(Keycode::Period) },
            InputCode::Slash => { Ok(Keycode::Slash) },
            InputCode::Num0 => { Ok(Keycode::Num0) },
            InputCode::Num1 => { Ok(Keycode::Num1) },
            InputCode::Num2 => { Ok(Keycode::Num2) },
            InputCode::Num3 => { Ok(Keycode::Num3) },
            InputCode::Num4 => { Ok(Keycode::Num4) },
            InputCode::Num5 => { Ok(Keycode::Num5) },
            InputCode::Num6 => { Ok(Keycode::Num6) },
            InputCode::Num7 => { Ok(Keycode::Num7) },
            InputCode::Num8 => { Ok(Keycode::Num8) },
            InputCode::Num9 => { Ok(Keycode::Num9) },
            InputCode::Colon => { Ok(Keycode::Colon) },
            InputCode::Semicolon => { Ok(Keycode::Semicolon) },
            InputCode::Less => { Ok(Keycode::Less) },
            InputCode::Equals => { Ok(Keycode::Equals) },
            InputCode::Greater => { Ok(Keycode::Greater) },
            InputCode::Question => { Ok(Keycode::Question) },
            InputCode::At => { Ok(Keycode::At) },
            InputCode::LeftBracket => { Ok(Keycode::LeftBracket) },
            InputCode::Backslash => { Ok(Keycode::Backslash) },
            InputCode::RightBracket => { Ok(Keycode::RightBracket) },
            InputCode::Caret => { Ok(Keycode::Caret) },
            InputCode::Underscore => { Ok(Keycode::Underscore) },
            InputCode::Backquote => { Ok(Keycode::Backquote) },
            InputCode::A => { Ok(Keycode::A) },
            InputCode::B => { Ok(Keycode::B) },
            InputCode::C => { Ok(Keycode::C) },
            InputCode::D => { Ok(Keycode::D) },
            InputCode::E => { Ok(Keycode::E) },
            InputCode::F => { Ok(Keycode::F) },
            InputCode::G => { Ok(Keycode::G) },
            InputCode::H => { Ok(Keycode::H) },
            InputCode::I => { Ok(Keycode::I) },
            InputCode::J => { Ok(Keycode::J) },
            InputCode::K => { Ok(Keycode::K) },
            InputCode::L => { Ok(Keycode::L) },
            InputCode::M => { Ok(Keycode::M) },
            InputCode::N => { Ok(Keycode::N) },
            InputCode::O => { Ok(Keycode::O) },
            InputCode::P => { Ok(Keycode::P) },
            InputCode::Q => { Ok(Keycode::Q) },
            InputCode::R => { Ok(Keycode::R) },
            InputCode::S => { Ok(Keycode::S) },
            InputCode::T => { Ok(Keycode::T) },
            InputCode::U => { Ok(Keycode::U) },
            InputCode::V => { Ok(Keycode::V) },
            InputCode::W => { Ok(Keycode::W) },
            InputCode::X => { Ok(Keycode::X) },
            InputCode::Y => { Ok(Keycode::Y) },
            InputCode::Z => { Ok(Keycode::Z) },
            InputCode::Delete => { Ok(Keycode::Delete) },
            InputCode::CapsLock => { Ok(Keycode::CapsLock) },
            InputCode::F1 => { Ok(Keycode::F1) },
            InputCode::F2 => { Ok(Keycode::F2) },
            InputCode::F3 => { Ok(Keycode::F3) },
            InputCode::F4 => { Ok(Keycode::F4) },
            InputCode::F5 => { Ok(Keycode::F5) },
            InputCode::F6 => { Ok(Keycode::F6) },
            InputCode::F7 => { Ok(Keycode::F7) },
            InputCode::F8 => { Ok(Keycode::F8) },
            InputCode::F9 => { Ok(Keycode::F9) },
            InputCode::F10 => { Ok(Keycode::F10) },
            InputCode::F11 => { Ok(Keycode::F11) },
            InputCode::F12 => { Ok(Keycode::F12) },
            InputCode::PrintScreen => { Ok(Keycode::PrintScreen) },
            InputCode::ScrollLock => { Ok(Keycode::ScrollLock) },
            InputCode::Pause => { Ok(Keycode::Pause) },
            InputCode::Insert => { Ok(Keycode::Insert) },
            InputCode::Home => { Ok(Keycode::Home) },
            InputCode::PageUp => { Ok(Keycode::PageUp) },
            InputCode::End => { Ok(Keycode::End) },
            InputCode::PageDown => { Ok(Keycode::PageDown) },
            InputCode::Right => { Ok(Keycode::Right) },
            InputCode::Left => { Ok(Keycode::Left) },
            InputCode::Down => { Ok(Keycode::Down) },
            InputCode::Up => { Ok(Keycode::Up) },
            InputCode::NumLockClear => { Ok(Keycode::NumLockClear) },
            InputCode::KpDivide => { Ok(Keycode::KpDivide) },
            InputCode::KpMultiply => { Ok(Keycode::KpMultiply) },
            InputCode::KpMinus => { Ok(Keycode::KpMinus) },
            InputCode::KpPlus => { Ok(Keycode::KpPlus) },
            InputCode::KpEnter => { Ok(Keycode::KpEnter) },
            InputCode::Kp1 => { Ok(Keycode::Kp1) },
            InputCode::Kp2 => { Ok(Keycode::Kp2) },
            InputCode::Kp3 => { Ok(Keycode::Kp3) },
            InputCode::Kp4 => { Ok(Keycode::Kp4) },
            InputCode::Kp5 => { Ok(Keycode::Kp5) },
            InputCode::Kp6 => { Ok(Keycode::Kp6) },
            InputCode::Kp7 => { Ok(Keycode::Kp7) },
            InputCode::Kp8 => { Ok(Keycode::Kp8) },
            InputCode::Kp9 => { Ok(Keycode::Kp9) },
            InputCode::Kp0 => { Ok(Keycode::Kp0) },
            InputCode::KpPeriod => { Ok(Keycode::KpPeriod) },
            InputCode::Application => { Ok(Keycode::Application) },
            InputCode::Power => { Ok(Keycode::Power) },
            InputCode::KpEquals => { Ok(Keycode::KpEquals) },
            InputCode::F13 => { Ok(Keycode::F13) },
            InputCode::F14 => { Ok(Keycode::F14) },
            InputCode::F15 => { Ok(Keycode::F15) },
            InputCode::F16 => { Ok(Keycode::F16) },
            InputCode::F17 => { Ok(Keycode::F17) },
            InputCode::F18 => { Ok(Keycode::F18) },
            InputCode::F19 => { Ok(Keycode::F19) },
            InputCode::F20 => { Ok(Keycode::F20) },
            InputCode::F21 => { Ok(Keycode::F21) },
            InputCode::F22 => { Ok(Keycode::F22) },
            InputCode::F23 => { Ok(Keycode::F23) },
            InputCode::F24 => { Ok(Keycode::F24) },
            InputCode::Execute => { Ok(Keycode::Execute) },
            InputCode::Help => { Ok(Keycode::Help) },
            InputCode::Menu => { Ok(Keycode::Menu) },
            InputCode::Select => { Ok(Keycode::Select) },
            InputCode::Stop => { Ok(Keycode::Stop) },
            InputCode::Again => { Ok(Keycode::Again) },
            InputCode::Undo => { Ok(Keycode::Undo) },
            InputCode::Cut => { Ok(Keycode::Cut) },
            InputCode::Copy => { Ok(Keycode::Copy) },
            InputCode::Paste => { Ok(Keycode::Paste) },
            InputCode::Find => { Ok(Keycode::Find) },
            InputCode::Mute => { Ok(Keycode::Mute) },
            InputCode::VolumeUp => { Ok(Keycode::VolumeUp) },
            InputCode::VolumeDown => { Ok(Keycode::VolumeDown) },
            InputCode::KpComma => { Ok(Keycode::KpComma) },
            InputCode::KpEqualsAS400 => { Ok(Keycode::KpEqualsAS400) },
            InputCode::AltErase => { Ok(Keycode::AltErase) },
            InputCode::Sysreq => { Ok(Keycode::Sysreq) },
            InputCode::Cancel => { Ok(Keycode::Cancel) },
            InputCode::Clear => { Ok(Keycode::Clear) },
            InputCode::Prior => { Ok(Keycode::Prior) },
            InputCode::Return2 => { Ok(Keycode::Return2) },
            InputCode::Separator => { Ok(Keycode::Separator) },
            InputCode::Out => { Ok(Keycode::Out) },
            InputCode::Oper => { Ok(Keycode::Oper) },
            InputCode::ClearAgain => { Ok(Keycode::ClearAgain) },
            InputCode::CrSel => { Ok(Keycode::CrSel) },
            InputCode::ExSel => { Ok(Keycode::ExSel) },
            InputCode::Kp00 => { Ok(Keycode::Kp00) },
            InputCode::Kp000 => { Ok(Keycode::Kp000) },
            InputCode::ThousandsSeparator => { Ok(Keycode::ThousandsSeparator) },
            InputCode::DecimalSeparator => { Ok(Keycode::DecimalSeparator) },
            InputCode::CurrencyUnit => { Ok(Keycode::CurrencyUnit) },
            InputCode::CurrencySubUnit => { Ok(Keycode::CurrencySubUnit) },
            InputCode::KpLeftParen => { Ok(Keycode::KpLeftParen) },
            InputCode::KpRightParen => { Ok(Keycode::KpRightParen) },
            InputCode::KpLeftBrace => { Ok(Keycode::KpLeftBrace) },
            InputCode::KpRightBrace => { Ok(Keycode::KpRightBrace) },
            InputCode::KpTab => { Ok(Keycode::KpTab) },
            InputCode::KpBackspace => { Ok(Keycode::KpBackspace) },
            InputCode::KpA => { Ok(Keycode::KpA) },
            InputCode::KpB => { Ok(Keycode::KpB) },
            InputCode::KpC => { Ok(Keycode::KpC) },
            InputCode::KpD => { Ok(Keycode::KpD) },
            InputCode::KpE => { Ok(Keycode::KpE) },
            InputCode::KpF => { Ok(Keycode::KpF) },
            InputCode::KpXor => { Ok(Keycode::KpXor) },
            InputCode::KpPower => { Ok(Keycode::KpPower) },
            InputCode::KpPercent => { Ok(Keycode::KpPercent) },
            InputCode::KpLess => { Ok(Keycode::KpLess) },
            InputCode::KpGreater => { Ok(Keycode::KpGreater) },
            InputCode::KpAmpersand => { Ok(Keycode::KpAmpersand) },
            InputCode::KpDblAmpersand => { Ok(Keycode::KpDblAmpersand) },
            InputCode::KpVerticalBar => { Ok(Keycode::KpVerticalBar) },
            InputCode::KpDblVerticalBar => { Ok(Keycode::KpDblVerticalBar) },
            InputCode::KpColon => { Ok(Keycode::KpColon) },
            InputCode::KpHash => { Ok(Keycode::KpHash) },
            InputCode::KpSpace => { Ok(Keycode::KpSpace) },
            InputCode::KpAt => { Ok(Keycode::KpAt) },
            InputCode::KpExclam => { Ok(Keycode::KpExclam) },
            InputCode::KpMemStore => { Ok(Keycode::KpMemStore) },
            InputCode::KpMemRecall => { Ok(Keycode::KpMemRecall) },
            InputCode::KpMemClear => { Ok(Keycode::KpMemClear) },
            InputCode::KpMemAdd => { Ok(Keycode::KpMemAdd) },
            InputCode::KpMemSubtract => { Ok(Keycode::KpMemSubtract) },
            InputCode::KpMemMultiply => { Ok(Keycode::KpMemMultiply) },
            InputCode::KpMemDivide => { Ok(Keycode::KpMemDivide) },
            InputCode::KpPlusMinus => { Ok(Keycode::KpPlusMinus) },
            InputCode::KpClear => { Ok(Keycode::KpClear) },
            InputCode::KpClearEntry => { Ok(Keycode::KpClearEntry) },
            InputCode::KpBinary => { Ok(Keycode::KpBinary) },
            InputCode::KpOctal => { Ok(Keycode::KpOctal) },
            InputCode::KpDecimal => { Ok(Keycode::KpDecimal) },
            InputCode::KpHexadecimal => { Ok(Keycode::KpHexadecimal) },
            InputCode::LCtrl => { Ok(Keycode::LCtrl) },
            InputCode::LShift => { Ok(Keycode::LShift) },
            InputCode::LAlt => { Ok(Keycode::LAlt) },
            InputCode::LGui => { Ok(Keycode::LGui) },
            InputCode::RCtrl => { Ok(Keycode::RCtrl) },
            InputCode::RShift => { Ok(Keycode::RShift) },
            InputCode::RAlt => { Ok(Keycode::RAlt) },
            InputCode::RGui => { Ok(Keycode::RGui) },
            InputCode::Mode => { Ok(Keycode::Mode) },
            InputCode::AudioNext => { Ok(Keycode::AudioNext) },
            InputCode::AudioPrev => { Ok(Keycode::AudioPrev) },
            InputCode::AudioStop => { Ok(Keycode::AudioStop) },
            InputCode::AudioPlay => { Ok(Keycode::AudioPlay) },
            InputCode::AudioMute => { Ok(Keycode::AudioMute) },
            InputCode::MediaSelect => { Ok(Keycode::MediaSelect) },
            InputCode::Www => { Ok(Keycode::Www) },
            InputCode::Mail => { Ok(Keycode::Mail) },
            InputCode::Calculator => { Ok(Keycode::Calculator) },
            InputCode::Computer => { Ok(Keycode::Computer) },
            InputCode::AcSearch => { Ok(Keycode::AcSearch) },
            InputCode::AcHome => { Ok(Keycode::AcHome) },
            InputCode::AcBack => { Ok(Keycode::AcBack) },
            InputCode::AcForward => { Ok(Keycode::AcForward) },
            InputCode::AcStop => { Ok(Keycode::AcStop) },
            InputCode::AcRefresh => { Ok(Keycode::AcRefresh) },
            InputCode::AcBookmarks => { Ok(Keycode::AcBookmarks) },
            InputCode::BrightnessDown => { Ok(Keycode::BrightnessDown) },
            InputCode::BrightnessUp => { Ok(Keycode::BrightnessUp) },
            InputCode::DisplaySwitch => { Ok(Keycode::DisplaySwitch) },
            InputCode::KbdIllumToggle => { Ok(Keycode::KbdIllumToggle) },
            InputCode::KbdIllumDown => { Ok(Keycode::KbdIllumDown) },
            InputCode::KbdIllumUp => { Ok(Keycode::KbdIllumUp) },
            InputCode::Eject => { Ok(Keycode::Eject) },
            InputCode::Sleep => { Ok(Keycode::Sleep) },
            _ => { Err("unmatched".to_owned()) }
        }
    }

}

impl TryInto<MouseButton> for InputCode {

    type Error = String;

    fn try_into(self) -> Result<MouseButton, String> {
        match self {
            InputCode::MouseUnknown => { Ok(MouseButton::Unknown) },
            InputCode::MouseLeft => { Ok(MouseButton::Left) },
            InputCode::MouseMiddle => { Ok(MouseButton::Middle) },
            InputCode::MouseRight => { Ok(MouseButton::Right) },
            InputCode::MouseX1 => { Ok(MouseButton::X1) },
            InputCode::MouseX2 => { Ok(MouseButton::X2) },
            _ => { Err("unmatched".to_owned()) }
        }
    }

}